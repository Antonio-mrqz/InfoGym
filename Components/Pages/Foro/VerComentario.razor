@page "/comentario/{Id:int}"
@using MudBlazorWebApp1.Models
@using MudBlazorWebApp1.Services
@using MudBlazorWebApp1.Pages
@inject Services.ForoService ForoService
@inject Services.AuthService AuthService
@inject NavigationManager Navigation
@inject IDialogService DialogService
@inject ISnackbar Snackbar

<MudContainer MaxWidth="MaxWidth.Large" Class="mt-4">
    @if (comentario == null)
    {
        <MudProgressCircular Indeterminate="true" Color="Color.Primary" />
    }
    else
    {
        <MudFab StartIcon="@Icons.Material.Filled.AddCircleOutline"
                Color="Color.Primary"
                Style="position: fixed; bottom: 20px; right: 20px;"
                OnClick="AbrirDialogoResponderComentario">
        </MudFab>
        <!-- Comentario principal en grande -->
        <MudCard Class="mb-4" Style="border: 2px solid #D90429;">
            <MudCardHeader>
                <CardHeaderAvatar>
                    <MudAvatar Color="Color.Secondary">@comentario.NombreUsuario.FirstOrDefault()</MudAvatar>
                </CardHeaderAvatar>
                <CardHeaderContent>
                    <MudText Typo="Typo.h6">@comentario.NombreUsuario</MudText>
                    <MudText Typo="Typo.subtitle2">@comentario.Titulo</MudText>
                </CardHeaderContent>
            </MudCardHeader>
            <MudCardContent>
                <MudText Typo="Typo.body1">@comentario.Texto</MudText>
            </MudCardContent>
        </MudCard>

        <!-- Respuestas -->
        <MudText Typo="Typo.h6">Respuestas</MudText>
        @if (respuestas.Count == 0)
        {
            <MudText>No hay respuestas todavía.</MudText>
        }
        else
        {
            @foreach (var r in respuestas)
            {
                <MudCard Class="mb-2">
                    <MudCardHeader>
                        <CardHeaderAvatar>
                            <MudAvatar Color="Color.Info">@r.NombreUsuario.FirstOrDefault()</MudAvatar>
                        </CardHeaderAvatar>
                        <CardHeaderContent>
                            <MudText Typo="Typo.body1">@r.NombreUsuario</MudText>
                        </CardHeaderContent>
                        <CardHeaderActions>
                            @if (usuario?.Id == r.IdUsuario || usuario?.Email == "Admin@admin.com")
                            {
                                <MudIconButton Icon="@Icons.Material.Filled.Delete"
                                               Color="Color.Error"
                                               OnClick="@(() => BorrarComentario(r.Id))" />
                            }
                        </CardHeaderActions>
                    </MudCardHeader>
                    <MudCardContent>
                        <MudText>@r.Texto</MudText>
                    </MudCardContent>
                </MudCard>
            }
        }
    }
</MudContainer>

@code {
    [Parameter] public int Id { get; set; }
    private Usuario? usuario;
    private bool _initialized;

    private Comentario? comentario;
    private List<Comentario> respuestas = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!_initialized)
        {
            _initialized = true;

            usuario = await AuthService.GetCurrentUserAsync();
            if (usuario == null)
            {
                Navigation.NavigateTo("/login", forceLoad: true);
                return;
            }

            comentario = await ForoService.GetComentarioPorIdAsync(Id);
            respuestas = await ForoService.GetRespuestasAsync(Id);

            StateHasChanged();
        }
    }
    private async Task BorrarComentario(int id)
    {

        bool eliminado = await ForoService.BorrarComentario2Async(id);
        if (eliminado)
        {
            Snackbar.Add("Comentario Eliminado Correctamente", Severity.Success);
            respuestas = await ForoService.GetRespuestasAsync(Id);
            StateHasChanged();
        }
    }

    private async Task AbrirDialogoResponderComentario()
    {
        var options = new DialogOptions { CloseButton = true, MaxWidth = MaxWidth.Small, FullWidth = true };
        var parameters = new DialogParameters { ["ComentarioPadreId"] = Id };

        var dialog = DialogService.Show<NuevaRespuesta>("Responder Comentario", parameters, options);
        var result = await dialog.Result;

        if (!result.Canceled)
        {
            Snackbar.Add("Respuesta publicada correctamente", Severity.Success);
            respuestas = await ForoService.GetRespuestasAsync(Id);
            StateHasChanged();
        }
    }

}
